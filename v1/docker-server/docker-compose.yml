services:
  traefik:
    image: traefik:v3.3
    container_name: traefik
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${HTTP_PORT}:80"     # HTTP
      - "${HTTPS_PORT}:443"   # HTTPS
      - "${ADMIN_PORT}:8080"  # Admin
    volumes:
      - /run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/acme.json
      - ./traefik/traefik.yml:/traefik.yml
      - ./traefik/config:/config
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      # HTTP router for Cloudflare Flexible SSL
      - "traefik.http.routers.traefik-http.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.traefik-http.service=api@internal"
      - "traefik.http.routers.traefik-http.entrypoints=web"
      - "traefik.http.routers.traefik-http.middlewares=traefik-auth@file,secure-headers@file"
      # HTTPS router (kept for direct access)
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.middlewares=traefik-auth@file,secure-headers@file"

networks:
  traefik-public:
    name: traefik-public
    external: true

# Note for additional services using Cloudflare Flexible SSL:
# For services like bo-chat, use the following label configuration pattern:
#
# - "traefik.http.routers.[service]-http.entrypoints=web"
# - "traefik.http.routers.[service]-http.middlewares=cors@file,rate-limit@file"  # Don't use secure-headers for HTTP
#
# - "traefik.http.routers.[service].entrypoints=websecure"
# - "traefik.http.routers.[service].middlewares=secure-headers@file,cors@file,rate-limit@file"
